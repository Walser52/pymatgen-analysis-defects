[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 42", "versioningit ~= 1.0", "wheel"]

[project]
authors = [{name = "Jimmy-Xuan Shen", email = "jmmshn@gmail.com"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Operating System :: OS Independent",
  "Topic :: Other/Nonlisted Topic",
  "Topic :: Scientific/Engineering",
]
dependencies = [
  "pymatgen>=2022.7.8",
  "dscribe>=1.2.1",
]
description = "Pymatgen extension for defects analysis"
dynamic = ["version"]
keywords = ["high-throughput", "automated", "dft", "defects"]
license = {text = "modified BSD"}
name = "pymatgen-analysis-defects"
readme = "README.rst"
requires-python = '>="3.8"'

[project.optional-dependencies]
amset = ["amset>=0.4.15", "pydash"]
cclib = ["cclib"]
dev = ["pre-commit>=2.12.1"]
docs = [
  "numpydoc==1.3.1",
  "mistune==0.8.4",
]
phonons = ["phonopy>=1.10.8"]
strict = [
  "pymatgen@git+https://github.com/materialsproject/pymatgen.git",
  "dscribe==1.2.1",
]
tests = [
  "pytest==7.1.2",
  "pytest-cov==3.0.0",
]

[tool.setuptools.dynamic]
readme = {file = ["README.rst"]}

[project.urls]
documentation = "https://materialsproject.github.io/pymatgen-analysis-defects/"
homepage = "https://materialsproject.github.io/pymatgen-analysis-defects/"
repository = "https://github.com/hackingmaterials/pymatgen-analysis-defects"

[tool.setuptools.packages.find]
exclude = ["tests"]
where = ["pymatgen"]

[tool.versioningit.vcs]
default-tag = "0.0.1"
method = "git"

[tool.isort]
profile = "black"

[tool.black]
line-length = 120

[tool.flake8]
extend-ignore = "E203, W503, E501, F401, RST21"
max-line-length = 120
max-doc-length = 120
min-python-version = "3.8.0"
rst-roles = "class, func, ref, obj"
select = "C, E, F, W, B, B950"

[tool.mypy]
ignore_missing_imports = true
no_strict_optional = true

[tool.coverage.run]
branch = true
include = ["pymatgen/*"]
parallel = true

[tool.coverage.paths]
source = ["pymatgen/"]

[tool.coverage.report]
show_missing = true
skip_covered = true
